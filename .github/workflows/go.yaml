name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: cr.selcloud.ru/test-auth
  IMAGE_NAME: auth-server
  CONTAINER_NAME: auth-server-container

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.6'
          cache-dependency-path: go.sum

      - name: Build
        run: go build -o ./bin/ -v ./...

      - name: Test
        run: go test -v ./...

  linters:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22.6'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          args: --timeout=30m --config=./.golangci.pipeline.yaml --issues-exit-code=0

  # image-build-and-push:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: checkout master
  #       uses: actions/checkout@v3

  #     - name: setup docker buildx
  #       uses: docker/setup-buildx-actions@v2

  #     - name: login docker registry
  #       uses: docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

  #     - name: build and push docker image
  #       run: |
  #         TAG_NAME=$(echo $GITHUB_SHA | head -c7)
  #         docker buildx create --use
  #         docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME .

  # deploy_image:
  #   runs-on: ubuntu-latest
  #   needs: image-build-and-push

  #   steps:
  #     - name: deploy to selectel cloud via SSH action
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSHKEY }}
  #         envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME,SERVER_PORT,DB_NAME,DB_USER,DB_PASSWORD,DB_PORT,SALT_PASSWORD
  #         script: |
  #           TAG_NAME=$(echo $GITHUB_SHA | head -c7)
  #           docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
            
  #           docker stop $CONTAINER_NAME
            
  #           docker rm $CONTAINER_NAME
            
  #           docker run -d -p ${{ secrets.SERVER_PORT }}:${{ secrets.SERVER_PORT }} \
  #             --name $CONTAINER_NAME \
  #             -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
  #             -e DB_NAME=${{ secrets.DB_NAME }} \
  #             -e DB_USER=${{ secrets.DB_USER }} \
  #             -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
  #             -e DB_PORT=${{ secrets.DB_PORT }} \
  #             -e SALT_PASSWORD=${{ secrets.SALT_PASSWORD }} \
  #             $REGISTRY/$IMAGE_NAME:$TAG_NAME