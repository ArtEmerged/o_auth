syntax = "proto3";

package auth_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";


option go_package = "github.com/ArtEmerged/o_auth/pkg/auth_v1;auth_v1";

service UserV1 {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
    rpc GetUser (GetUserRequest) returns (GetUserResponse);
    rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty);
    rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty);
}

enum Role {
    UNKNOWN = 0;
    USER = 1;
    ADMIN = 2;
}

message UserInfo {
    int64 id = 1;
    string name = 2;
    string email = 3;
    Role role = 4;
    oneof timestamp {
        google.protobuf.Timestamp created_at = 5;
        google.protobuf.Timestamp updated_at = 6;
    }
}

message CreateUserRequest {
    string name = 1 [(validate.rules).string = {
        pattern:   "^[A-Za-z]+([A-Za-z]+)*$",
        max_bytes: 256,
    }];
    string email = 2 [(validate.rules).string.email = true];
    string password = 3 [(validate.rules).string = {
        pattern: "^[A-Za-z\\d@$!%*#?&]{8,}$",
        min_len: 8
    }];
    string password_confirm = 4 [(validate.rules).string = {
        pattern: "^[A-Za-z\\d@$!%*#?&]{8,}$",
        min_len: 8
    }];
    Role role = 5 [(validate.rules).enum.defined_only = true];
}

message CreateUserResponse {
    int64 id = 1;
}

message GetUserRequest {
    int64 id =1 [(validate.rules).int64.gt = 0];
}

message GetUserResponse {
    UserInfo user_info = 1;
}

message UpdateUserRequest {
    int64 id = 1 [(validate.rules).int64.gt = 0];
    optional string name = 2[(validate.rules).string = {
        pattern:   "^[A-Za-z]+( [A-Za-z]+)*$",
        max_bytes: 256,
    }];
    Role role = 4 [(validate.rules).enum = {in: [1,2]}];
}

message DeleteUserRequest {
    int64 id = 1 [(validate.rules).int64.gt = 0];
}
